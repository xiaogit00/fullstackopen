{"ast":null,"code":"var _jsxFileName = \"/Users/lei/fullstackopenSubmission/part2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Note from './components/Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [notes, setNotes] = useState(props.notes);\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    };\n    setnotes(notes.concat(noteObject));\n    setNewNote('');\n  };\n\n  const [newNote, setNewNote] = useState('a new note...');\n\n  const handleNoteChange = event => {\n    //console.log(event.target)\n    console.log(event.target.value); //this returns the input value. Rightttt. The value\n    //is the placeholder text, which is the text you input also.\n\n    setNewNote(event.target.value); // whenever there is one event, newNote is set to\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"yz5azxu9TnVq+mI3YcN10Qb5ng8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lei/fullstackopenSubmission/part2/src/App.js"],"names":["React","useState","Note","App","props","notes","setNotes","addNote","event","preventDefault","noteObject","content","newNote","date","Date","toISOString","important","Math","random","id","length","setnotes","concat","setNewNote","handleNoteChange","console","log","target","value","map","note"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACG,KAAK,CAACC,KAAP,CAAlC;;AAEA,QAAME,OAAO,GAAIC,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,OAAO,EAAEC,OADQ;AAEjBC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFW;AAGjBC,MAAAA,SAAS,EAAEC,IAAI,CAACC,MAAL,KAAe,GAHT;AAIjBC,MAAAA,EAAE,EAAEd,KAAK,CAACe,MAAN,GAAe;AAJF,KAAnB;AAOAC,IAAAA,QAAQ,CAAChB,KAAK,CAACiB,MAAN,CAAaZ,UAAb,CAAD,CAAR;AACAa,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAXD;;AAYA,QAAM,CAACX,OAAD,EAAUW,UAAV,IAAwBtB,QAAQ,CACpC,eADoC,CAAtC;;AAIA,QAAMuB,gBAAgB,GAAIhB,KAAD,IAAW;AAClC;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAK,CAACmB,MAAN,CAAaC,KAAzB,EAFkC,CAEF;AAChC;;AACAL,IAAAA,UAAU,CAACf,KAAK,CAACmB,MAAN,CAAaC,KAAd,CAAV,CAJkC,CAIJ;AAC/B,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGvB,KAAK,CAACwB,GAAN,CAAUC,IAAI,iBACb,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA;AAA1B,SAAWA,IAAI,CAACX,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAM,MAAA,QAAQ,EAAEZ,OAAhB;AAAA,8BACE;AACE,QAAA,KAAK,EAAEK,OADT;AAEE,QAAA,QAAQ,EAAEY;AAFZ;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3CD;;GAAMrB,G;;KAAAA,G;AA6CN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Note from './components/Note'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState(props.notes)\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() <0.5,\n      id: notes.length + 1\n    }\n\n    setnotes(notes.concat(noteObject))\n    setNewNote('')\n  }\n  const [newNote, setNewNote] = useState(\n    'a new note...'\n  )\n\n  const handleNoteChange = (event) => {\n    //console.log(event.target)\n    console.log(event.target.value) //this returns the input value. Rightttt. The value\n    //is the placeholder text, which is the text you input also.\n    setNewNote(event.target.value)// whenever there is one event, newNote is set to\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <ul>\n        {notes.map(note =>\n          <Note key={note.id} note={note} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}