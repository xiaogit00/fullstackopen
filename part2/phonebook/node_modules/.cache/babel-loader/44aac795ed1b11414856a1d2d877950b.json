{"ast":null,"code":"var _jsxFileName = \"/Users/lei/fullstackopenSubmission/part2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; //Ex 2.11: Initial state of the data to be fetched using server.\n//High level logic: Right now, the data is hard coded in the App component\n// under the persons state variable.\n//Ideally, what happens is this:\n// Import useEffect,\n// Within App component:\n// -create a persons state variable which is an array\n// -Write the effect hook \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  value,\n  handle\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Filter shown with:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: value,\n        onChange: handle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Search;\n\nconst Form = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: props.nameInput,\n        onChange: props.nameHandle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: props.numberInput,\n        onChange: props.numberHandle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Form;\n\nconst Persons = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.persons\n  }, void 0, false);\n};\n\n_c3 = Persons;\n\nconst App = () => {\n  _s();\n\n  // STATE FIELDS\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [search, setNewSearch] = useState(''); //EFFECT hook\n\n  const hook = () => {\n    axios.get('http://localhost:3001/persons').them(response => {\n      console.log('promise fulfilled');\n      setPersons(response.data);\n    });\n  };\n\n  useEffect(hook, []); // EVENT HANDLERS\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchChange = event => {\n    setNewSearch(event.target.value);\n  }; //Add eventhandler\n\n\n  const add = event => {\n    event.preventDefault(); // console.log('addName triggered')\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }; //\n\n    const personExists = obj => obj.name === newName; //returns True if already exist\n\n\n    if (persons.some(personExists)) {\n      alert(`${newName} is already added to phonebook`);\n    } else {\n      setPersons(persons.concat(newPerson));\n      setNewName('');\n      setNewNumber('');\n    }\n  }; //END add eventhandler\n\n\n  const filteredPersons = search === '' ? persons : persons.filter(person => person.name.toLowerCase().includes(search));\n  const displayedPeople = filteredPersons.map(x => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\" \", x.name, \" \", x.number]\n  }, x.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 52\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      value: search,\n      handle: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      submitHandler: add,\n      nameInput: newName,\n      nameHandle: handleNameChange,\n      numberInput: newNumber,\n      numberHandle: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      persons: displayedPeople\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"6CA49yBlK8GEl6vtrEJHY1tNJKo=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"Persons\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/lei/fullstackopenSubmission/part2/src/App.js"],"names":["React","useState","useEffect","axios","Search","value","handle","Form","props","submitHandler","nameInput","nameHandle","numberInput","numberHandle","Persons","persons","App","setPersons","newName","setNewName","newNumber","setNewNumber","search","setNewSearch","hook","get","them","response","console","log","data","handleNameChange","event","target","handleNumberChange","handleSearchChange","add","preventDefault","newPerson","name","number","personExists","obj","some","alert","concat","filteredPersons","filter","person","toLowerCase","includes","displayedPeople","map","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n//Ex 2.11: Initial state of the data to be fetched using server.\n\n//High level logic: Right now, the data is hard coded in the App component\n// under the persons state variable.\n\n//Ideally, what happens is this:\n// Import useEffect,\n// Within App component:\n// -create a persons state variable which is an array\n// -Write the effect hook \nconst Search = ({ value, handle }) => {\n  return (\n    <>\n      <p>Filter shown with:\n        <input value={value} onChange={handle}/>\n      </p>\n    </>\n  )\n}\n\nconst Form = (props) => {\n  return (\n    <form onSubmit={props.submitHandler}>\n      <div>\n        name: <input value={props.nameInput} onChange={props.nameHandle}/>\n      </div>\n      <div>\n        number: <input value={props.numberInput} onChange={props.numberHandle}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = (props) => {\n  return (\n    <>\n    {props.persons}\n    </>\n  )\n}\n\nconst App = () => {\n  // STATE FIELDS\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [search, setNewSearch] = useState('')\n\n  //EFFECT hook\n  const hook = () => {\n    axios\n      .get('http://localhost:3001/persons')\n      .them(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n  }\n\n  useEffect(hook, [])\n  // EVENT HANDLERS\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n//Add eventhandler\n  const add = (event) => {\n    event.preventDefault()\n    // console.log('addName triggered')\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n//\n    const personExists = (obj) => obj.name === newName //returns True if already exist\n\n    if (persons.some(personExists)) {\n      alert(`${newName} is already added to phonebook`)\n    }\n    else {\n      setPersons(persons.concat(newPerson))\n      setNewName('')\n      setNewNumber('')\n    }\n  }\n  //END add eventhandler\n\n  const filteredPersons = search === ''\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(search))\n\n  const displayedPeople = filteredPersons.map(x => <p key={x.name}> {x.name} {x.number}</p>)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Search value={search} handle={handleSearchChange}/>\n\n      <Form submitHandler={add}\n            nameInput={newName}\n            nameHandle={handleNameChange}\n            numberInput={newNumber}\n            numberHandle={handleNumberChange}\n      />\n\n\n      <h2>Numbers</h2>\n      <Persons persons={displayedPeople}/>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}