{"ast":null,"code":"var _jsxFileName = \"/Users/lei/fullstackopenSubmission/part2/src/App.js\",\n    _s = $RefreshSig$();\n\n// ************************************************************************************\n//*                                   Exercise 2.15\n//************************************************************************************\n// Problem: Save phonebook data into backend server\n// ************************************************************************************\n//*                               Initial Problem Analysis\n//************************************************************************************\n// Higher level logic:\n// 1. I'll need to create a json.server.\n// 2. Let's say the Json server has a couple of values\n// 3. I'll need to Read, Write, from the JSON server\n// ************************************************************************************\n//*                                  Pseudo-code\n//************************************************************************************\n// 1. Json server done + values done:\n// 2. To read:\n//  -Import axios\n//  - fire up local server\n//  -Call axios.get('url') to create promise object\n//  -Call then to get response data.\n// 3. To display the data: I will need to\nimport React, { useState, useEffect } from 'react';\nimport Search from './components/Search';\nimport Persons from './components/Persons';\nimport Form from './components/Form';\nimport axios from 'axios'; // ************************************************************************************\n//*                                  App Component\n//************************************************************************************\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // ********************|\n  //*   State Variables *|\n  //*********************|\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [search, setNewSearch] = useState(''); // ********************|\n  //*   Fetching Data   *|\n  //*********************|\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/persons').then(response => setPersons(response.data));\n  }); // console.log(promise.then(response => setPersons(response.data))\n  // console.log('persons', persons)\n  // ********************|\n  //*   Event Handlers  *|\n  //*********************|\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchChange = event => {\n    setNewSearch(event.target.value);\n  };\n\n  const add = event => {\n    event.preventDefault(); // console.log('addName triggered')\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }; //\n\n    const personExists = obj => obj.name === newName; //returns True if already exist\n\n\n    if (persons.some(personExists)) {\n      alert(`${newName} is already added to phonebook`);\n    } else {\n      setPersons(persons.concat(newPerson));\n      setNewName('');\n      setNewNumber('');\n    }\n  }; // ********************|\n  //*   Filter          *|\n  //*********************|\n\n\n  const filteredPersons = search === '' ? persons : persons.filter(person => person.name.toLowerCase().includes(search));\n  const displayedPeople = filteredPersons.map(x => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\" \", x.name, \" \", x.number]\n  }, x.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 52\n  }, this)); // ********************|\n  //*         JSX       *|\n  //*********************|\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      value: search,\n      handle: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      submitHandler: add,\n      nameInput: newName,\n      nameHandle: handleNameChange,\n      numberInput: newNumber,\n      numberHandle: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      persons: displayedPeople\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"6CA49yBlK8GEl6vtrEJHY1tNJKo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lei/fullstackopenSubmission/part2/src/App.js"],"names":["React","useState","useEffect","Search","Persons","Form","axios","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","search","setNewSearch","get","then","response","data","handleNameChange","event","target","value","handleNumberChange","handleSearchChange","add","preventDefault","newPerson","name","number","personExists","obj","some","alert","concat","filteredPersons","filter","person","toLowerCase","includes","displayedPeople","map","x"],"mappings":"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","sourcesContent":["// ************************************************************************************\n//*                                   Exercise 2.15\n//************************************************************************************\n// Problem: Save phonebook data into backend server\n\n// ************************************************************************************\n//*                               Initial Problem Analysis\n//************************************************************************************\n// Higher level logic:\n// 1. I'll need to create a json.server.\n// 2. Let's say the Json server has a couple of values\n// 3. I'll need to Read, Write, from the JSON server\n\n// ************************************************************************************\n//*                                  Pseudo-code\n//************************************************************************************\n// 1. Json server done + values done:\n// 2. To read:\n//  -Import axios\n//  - fire up local server\n//  -Call axios.get('url') to create promise object\n//  -Call then to get response data.\n// 3. To display the data: I will need to\n\nimport React, { useState, useEffect } from 'react'\nimport Search from './components/Search'\nimport Persons from './components/Persons'\nimport Form from './components/Form'\nimport axios from 'axios'\n\n\n\n\n\n// ************************************************************************************\n//*                                  App Component\n//************************************************************************************\nconst App = () => {\n\n  // ********************|\n  //*   State Variables *|\n  //*********************|\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [search, setNewSearch] = useState('')\n\n  // ********************|\n  //*   Fetching Data   *|\n  //*********************|\n  useEffect(() => {\n    axios\n      .get('http://localhost:3001/persons')\n      .then(response => setPersons(response.data))\n  })\n\n\n\n  // console.log(promise.then(response => setPersons(response.data))\n  // console.log('persons', persons)\n\n\n  // ********************|\n  //*   Event Handlers  *|\n  //*********************|\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  const add = (event) => {\n    event.preventDefault()\n    // console.log('addName triggered')\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n//\n    const personExists = (obj) => obj.name === newName //returns True if already exist\n\n    if (persons.some(personExists)) {\n      alert(`${newName} is already added to phonebook`)\n    }\n    else {\n      setPersons(persons.concat(newPerson))\n      setNewName('')\n      setNewNumber('')\n    }\n  }\n  // ********************|\n  //*   Filter          *|\n  //*********************|\n\n  const filteredPersons = search === ''\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(search))\n\n  const displayedPeople = filteredPersons.map(x => <p key={x.name}> {x.name} {x.number}</p>)\n\n  // ********************|\n  //*         JSX       *|\n  //*********************|\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Search value={search} handle={handleSearchChange}/>\n\n      <Form submitHandler={add}\n            nameInput={newName}\n            nameHandle={handleNameChange}\n            numberInput={newNumber}\n            numberHandle={handleNumberChange}\n      />\n\n\n      <h2>Numbers</h2>\n      <Persons persons={displayedPeople}/>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}