{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Note from './components/Note';\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    console.log('effect');\n    axios.get('http://localhost:3001/notes').then(response => {\n      console.log('promise fulfilled');\n      setNotes(response.data);\n    });\n  }, []);\n  console.log('render', notes.length, 'notes');\n};\n\n_s(App, \"YoJCZcz2gqmCo+muBMJeaVoxZWM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lei/fullstackopenSubmission/part2/src/App.js"],"names":["React","useState","axios","Note","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","console","log","get","then","response","data","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AAEAU,EAAAA,SAAS,CAAC,MAAM;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAX,IAAAA,KAAK,CACFY,GADH,CACO,6BADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAP,MAAAA,QAAQ,CAACU,QAAQ,CAACC,IAAV,CAAR;AACC,KALL;AAMG,GARM,EAQJ,EARI,CAAT;AASEL,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,KAAK,CAACa,MAA5B,EAAoC,OAApC;AACH,CAfD;;GAAMd,G;;KAAAA,G;AAiBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n  console.log('effect')\n  axios\n    .get('http://localhost:3001/notes')\n    .then(response => {\n      console.log('promise fulfilled')\n      setNotes(response.data)\n      })\n    }, [])\n    console.log('render', notes.length, 'notes')\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}