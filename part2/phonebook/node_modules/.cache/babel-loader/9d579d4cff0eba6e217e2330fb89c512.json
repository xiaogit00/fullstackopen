{"ast":null,"code":"var _jsxFileName = \"/Users/lei/fullstackopenSubmission/part2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; //Ex 2.12: Filter and display countries from API\n//High level logics:\n// I first need to load the data into a countries variable\n// Then, let me try to display the country names\n// Then, my input would need to filter the data.\n//    -To create my filter,\n// Finally, I'll need to check for the condition when countries.length===1\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Countries = ({\n  countries\n}) => {\n  console.log({\n    countries\n  }); // const displayedCountries =  ? \"Type Something!\":\n  //                            {selectedCountries}.length > 10 ? \"Too many matches, specify another filter\":\n  //                            {selectedCountries}.length === 0 ? \"Sorry, none match\":\n  //                            {selectedCountries};\n  //                   console.log('displayed countries', displayedCountries)\n\n  if (1 === 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\\"Type Something!\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_c = Countries;\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [search, setSearch] = useState('');\n\n  const hook = () => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      console.log('promise fulfilled');\n      setCountries(response.data);\n    });\n  };\n\n  useEffect(hook, []);\n  console.log(countries); //Event Handler\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"find countries\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: search,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Countries, {\n      countries: countries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"KCgfdMLpS+ii8326jzdSDQBcnSQ=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Countries\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/lei/fullstackopenSubmission/part2/src/App.js"],"names":["React","useState","useEffect","axios","Countries","countries","console","log","App","setCountries","search","setSearch","hook","get","then","response","data","handleSearch","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;AAIA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,IAAAA;AAAD,GAAZ,EADmC,CAEnC;AACA;AACA;AACA;AACA;;AACA,MAAG,MAAI,CAAP,EAAU;AAER,wBACE;AAAA,6BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADF;AAKD;AACF,CAfD;;KAAMD,S;;AAiBN,MAAMI,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACH,SAAD,EAAYI,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAES,MAAF,EAAUC,SAAV,IAAuBV,QAAQ,CAAC,EAAD,CAArC;;AAIA,QAAMW,IAAI,GAAG,MAAM;AACjBT,IAAAA,KAAK,CACFU,GADH,CACO,sCADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAE,MAAAA,YAAY,CAACM,QAAQ,CAACC,IAAV,CAAZ;AACD,KALH;AAMD,GAPD;;AASAd,EAAAA,SAAS,CAACU,IAAD,EAAO,EAAP,CAAT;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ,EAjBgB,CAoBhB;;AACA,QAAMY,YAAY,GAAIC,KAAD,IAAW;AAC9BP,IAAAA,SAAS,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACD,GAFD;;AAMA,sBACE;AAAA,4BACA;AAAA,gDACE;AAAO,QAAA,KAAK,EAAEV,MAAd;AAAsB,QAAA,QAAQ,EAAEO;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAIA,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEZ;AAAtB;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBADF;AASD,CApCD;;GAAMG,G;;MAAAA,G;AAuCN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n//Ex 2.12: Filter and display countries from API\n\n//High level logics:\n// I first need to load the data into a countries variable\n// Then, let me try to display the country names\n// Then, my input would need to filter the data.\n//    -To create my filter,\n// Finally, I'll need to check for the condition when countries.length===1\n\n\n\nconst Countries = ({ countries }) => {\n  console.log({countries})\n  // const displayedCountries =  ? \"Type Something!\":\n  //                            {selectedCountries}.length > 10 ? \"Too many matches, specify another filter\":\n  //                            {selectedCountries}.length === 0 ? \"Sorry, none match\":\n  //                            {selectedCountries};\n  //                   console.log('displayed countries', displayedCountries)\n  if(1===1) {\n\n    return (\n      <>\n      <p>\"Type Something!\"</p>\n      </>\n    )\n  }\n}\n\nconst App = () => {\n\n  const [countries, setCountries] = useState([])\n  const [ search, setSearch] = useState('')\n\n\n\n  const hook = () => {\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then(response => {\n        console.log('promise fulfilled')\n        setCountries(response.data)\n      })\n  }\n\n  useEffect(hook, [])\n  console.log(countries)\n\n\n  //Event Handler\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n  }\n\n\n\n  return (\n    <>\n    <p>find countries\n      <input value={search} onChange={handleSearch}></input>\n    </p>\n    <Countries countries={countries} />\n\n    </>\n  )\n}\n\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}