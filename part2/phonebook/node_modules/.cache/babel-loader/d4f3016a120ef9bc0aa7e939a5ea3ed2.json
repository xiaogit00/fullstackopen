{"ast":null,"code":"var _jsxFileName = \"/Users/lei/fullstackopen/part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\n// ************************************************************************************\n//*                                   Exercise 2.17\n//************************************************************************************\n// Problem: Adding Delete Functionality\n// ************************************************************************************\n//*                               Initial Problem Analysis\n//************************************************************************************\n// 1. First, I'll need to create a button beside each name that is rendered.\n// 2. Then, I need to code the delete event handler\n// 3. Within the delete handler, I'll need to edit Persons module\n// ************************************************************************************\n//*                                  Pseudo-code\n//************************************************************************************\n// 1. As above.\n// ************************************************************************************\n//*                                  Takeaways\n//************************************************************************************\n// 1. You cannot use delete keyword for functions\n//\n// ************************************************************************************\n//*                                   Exercise 2.18\n//************************************************************************************\n// Problem: Replacing numbers if same name but different number\n// ************************************************************************************\n//*                               Initial Problem Analysis\n//************************************************************************************\n// 1. Right now, the checking is done by running persons.some(personExists)\n// 2. I'll need to check if person exists --> if exists, conduct further check for number\n// 3. If number same, then create an alert\n// 4. If value of alert = yes, then UPDATE number\n// 5. rerender component\n// ************************************************************************************\n//*                                  Pseudo-code\n//************************************************************************************\n// 1. Create check for number numberSame\nimport React, { useState, useEffect } from 'react';\nimport Search from './components/Search';\nimport Persons from './components/Persons';\nimport Form from './components/Form';\nimport axios from 'axios';\nimport personService from './services/persons';\nimport './index.css'; // ************************************************************************************\n//*                                  App Component\n//************************************************************************************\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // ********************|\n  //*   State Variables *|\n  //*********************|\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [search, setNewSearch] = useState(''); // ********************|\n  //*   Fetching Data   *|\n  //*********************|\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => setPersons(initialPersons));\n  }, []); // console.log(promise.then(response => setPersons(response.data))\n  // console.log('persons', persons)\n  // ********************|\n  //*   Event Handlers  *|\n  //*********************|\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchChange = event => {\n    setNewSearch(event.target.value);\n  };\n\n  const deletePerson = id => {\n    // console.log(\"delete person\" + id)\n    personService.deleteRecord(id).then(() => {\n      alert(\"Successfully deleted\");\n      setPersons(persons.filter(person => person.id !== id));\n    });\n  };\n\n  const add = event => {\n    event.preventDefault(); // console.log('addName triggered')\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }; //\n\n    const personExists = obj => obj.name === newName; //returns True if already exist\n\n\n    const numberSame = obj => obj.number === newNumber;\n\n    if (persons.some(personExists)) {\n      if (window.confirm(`${newName} is already added to phonebook,\n        replace the old number with the new one?`)) {\n        //If click replace old number with new\n        const selectedID = persons.filter(person => person.name === newName)[0].id;\n        personService.update(selectedID, newPerson).then(response => {\n          setPersons(persons.map(person => person.id === selectedID ? newPerson : person));\n        });\n      }\n    } else {\n      personService.create(newPerson).then(response => {\n        setPersons(persons.concat(response));\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  }; // ********************|\n  //*   Filter          *|\n  //*********************|\n\n\n  const filteredPersons = search === '' ? persons : persons.filter(person => person.name.toLowerCase().includes(search)); // ********************|\n  //*         JSX       *|\n  //*********************|\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      value: search,\n      handle: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      submitHandler: add,\n      nameInput: newName,\n      nameHandle: handleNameChange,\n      numberInput: newNumber,\n      numberHandle: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      persons: filteredPersons,\n      deleteHandler: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"6CA49yBlK8GEl6vtrEJHY1tNJKo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lei/fullstackopen/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","Search","Persons","Form","axios","personService","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","search","setNewSearch","getAll","then","initialPersons","handleNameChange","event","target","value","handleNumberChange","handleSearchChange","deletePerson","id","deleteRecord","alert","filter","person","add","preventDefault","newPerson","name","number","personExists","obj","numberSame","some","window","confirm","selectedID","update","response","map","create","concat","filteredPersons","toLowerCase","includes"],"mappings":"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","sourcesContent":["// ************************************************************************************\n//*                                   Exercise 2.17\n//************************************************************************************\n// Problem: Adding Delete Functionality\n\n// ************************************************************************************\n//*                               Initial Problem Analysis\n//************************************************************************************\n// 1. First, I'll need to create a button beside each name that is rendered.\n// 2. Then, I need to code the delete event handler\n// 3. Within the delete handler, I'll need to edit Persons module\n\n// ************************************************************************************\n//*                                  Pseudo-code\n//************************************************************************************\n// 1. As above.\n// ************************************************************************************\n//*                                  Takeaways\n//************************************************************************************\n// 1. You cannot use delete keyword for functions\n//\n\n\n// ************************************************************************************\n//*                                   Exercise 2.18\n//************************************************************************************\n// Problem: Replacing numbers if same name but different number\n\n// ************************************************************************************\n//*                               Initial Problem Analysis\n//************************************************************************************\n// 1. Right now, the checking is done by running persons.some(personExists)\n// 2. I'll need to check if person exists --> if exists, conduct further check for number\n// 3. If number same, then create an alert\n// 4. If value of alert = yes, then UPDATE number\n// 5. rerender component\n// ************************************************************************************\n//*                                  Pseudo-code\n//************************************************************************************\n// 1. Create check for number numberSame\n\n\n\n\nimport React, { useState, useEffect } from 'react'\nimport Search from './components/Search'\nimport Persons from './components/Persons'\nimport Form from './components/Form'\nimport axios from 'axios'\nimport personService from './services/persons'\nimport './index.css'\n\n\n// ************************************************************************************\n//*                                  App Component\n//************************************************************************************\nconst App = () => {\n\n  // ********************|\n  //*   State Variables *|\n  //*********************|\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [search, setNewSearch] = useState('')\n\n  // ********************|\n  //*   Fetching Data   *|\n  //*********************|\n  useEffect(() => {\n    personService.getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  },[])\n\n\n  // console.log(promise.then(response => setPersons(response.data))\n  // console.log('persons', persons)\n\n\n  // ********************|\n  //*   Event Handlers  *|\n  //*********************|\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  const deletePerson = (id) => {\n    // console.log(\"delete person\" + id)\n    personService.deleteRecord(id)\n      .then(() => {\n        alert(\"Successfully deleted\")\n        setPersons(persons.filter(person => person.id !== id))\n      })\n  }\n\n  const add = (event) => {\n    event.preventDefault()\n    // console.log('addName triggered')\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n//\n    const personExists = (obj) => obj.name === newName //returns True if already exist\n    const numberSame = (obj) => obj.number === newNumber\n\n    if (persons.some(personExists)) {\n      if(window.confirm(`${newName} is already added to phonebook,\n        replace the old number with the new one?`))\n        {\n          //If click replace old number with new\n          const selectedID = persons.filter(person => person.name === newName)[0].id\n          personService.update(selectedID, newPerson)\n            .then(response => {\n              setPersons(persons.map(person => person.id === selectedID ? newPerson : person))\n\n            })\n        }\n\n    }\n    else {\n      personService.create(newPerson)\n        .then(response => {\n          setPersons(persons.concat(response))\n          setNewName('')\n          setNewNumber('')\n        })\n\n    }\n  }\n  // ********************|\n  //*   Filter          *|\n  //*********************|\n\n  const filteredPersons = search === ''\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(search))\n\n\n\n  // ********************|\n  //*         JSX       *|\n  //*********************|\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Search value={search} handle={handleSearchChange}/>\n\n      <Form submitHandler={add}\n            nameInput={newName}\n            nameHandle={handleNameChange}\n            numberInput={newNumber}\n            numberHandle={handleNumberChange}\n      />\n\n\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons}\n               deleteHandler={deletePerson}\n\n      />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}