{"version":3,"sources":["components/Search.js","services/persons.js","components/Person.js","components/Persons.js","components/Form.js","components/Notification.js","App.js","index.js"],"names":["Search","value","handle","onChange","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Person","person","deleteHandler","name","number","onClick","Persons","persons","map","i","Form","props","onSubmit","submitHandler","nameInput","nameHandle","numberInput","numberHandle","type","Notification","message","className","error","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","search","setNewSearch","errorMessage","setErrorMessage","useEffect","personService","initialPersons","console","log","filteredPersons","filter","toLowerCase","includes","event","target","preventDefault","newPerson","some","obj","window","confirm","selectedID","concat","catch","setTimeout","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34d30e49.chunk.js","sourcesContent":["// ************************************************************************************\n//*                                  Search Component\n//************************************************************************************\nimport React from 'react'\n\nconst Search = ({ value, handle }) => {\n  return (\n    <>\n      <p>Filter shown with:\n        <input value={value} onChange={handle}/>\n      </p>\n    </>\n  )\n}\n\nexport default Search\n","import axios from 'axios'\nconst baseUrl = 'api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteRecord = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n  deleteRecord: deleteRecord\n}\n","import React from 'react'\nimport personService from '../services/persons'\n\nconst Person = ( {person, deleteHandler} ) => {\n\n  return (\n    <>\n    <p> {person.name} {person.number} <button onClick={() => deleteHandler(person.id)}> Delete </button> </p>\n    </>\n  )\n}\n\n\nexport default Person\n","// ************************************************************************************\n//*                                  Persons Component\n//************************************************************************************\nimport React from 'react'\nimport Person from './Person'\n//I'll need to refactor the code so that the components are in\n// charge of generating the HTML for renders.\n// That means that I'll be passing the unfiltered persons var into Persons\n// const displayedPeople = filteredPersons.map(x => <p key={x.name}> {x.name} {x.number}</p>)\nconst Persons = ({persons, deleteHandler}) => {\n\n  return (\n    <>\n\n    {persons.map((person, i) => {\n      return (\n        <Person person={person}\n                key={i}\n                deleteHandler={deleteHandler}\n\n        />\n      )\n    })}\n    </>\n  )\n}\n\nexport default Persons\n","// ************************************************************************************\n//*                                  Form Component\n//************************************************************************************\nimport React from 'react'\n\n\nconst Form = (props) => {\n  return (\n    <form onSubmit={props.submitHandler}>\n      <div>\n        name: <input value={props.nameInput} onChange={props.nameHandle}/>\n      </div>\n      <div>\n        number: <input value={props.numberInput} onChange={props.numberHandle}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default Form\n","import React from 'react'\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"error\">\n    {message.error}\n    </div>\n  )\n}\n\nexport default Notification\n","// ************************************************************************************\n//*                                   Exercise 2.17\n//************************************************************************************\n// Problem: Adding Delete Functionality\n\n// ************************************************************************************\n//*                               Initial Problem Analysis\n//************************************************************************************\n// 1. First, I'll need to create a button beside each name that is rendered.\n// 2. Then, I need to code the delete event handler\n// 3. Within the delete handler, I'll need to edit Persons module\n\n// ************************************************************************************\n//*                                  Pseudo-code\n//************************************************************************************\n// 1. As above.\n// ************************************************************************************\n//*                                  Takeaways\n//************************************************************************************\n// 1. You cannot use delete keyword for functions\n//\n\n\n// ************************************************************************************\n//*                                   Exercise 2.18\n//************************************************************************************\n// Problem: Replacing numbers if same name but different number\n\n// ************************************************************************************\n//*                               Initial Problem Analysis\n//************************************************************************************\n// 1. Right now, the checking is done by running persons.some(personExists)\n// 2. I'll need to check if person exists --> if exists, conduct further check for number\n// 3. If number same, then create an alert\n// 4. If value of alert = yes, then UPDATE number\n// 5. rerender component\n// ************************************************************************************\n//*                                  Pseudo-code\n//************************************************************************************\n// 1. Create check for number numberSame\n\n\n\n\nimport React, { useState, useEffect } from 'react'\nimport Search from './components/Search'\nimport Persons from './components/Persons'\nimport Form from './components/Form'\nimport Notification from './components/Notification'\nimport axios from 'axios'\nimport personService from './services/persons'\nimport './index.css'\n\n\n// ************************************************************************************\n//*                                  App Component\n//************************************************************************************\nconst App = () => {\n\n  // ********************|\n  //*   State Variables *|\n  //*********************|\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [search, setNewSearch] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  // ********************|\n  //*   Fetching Data   *|\n  //*********************|\n  useEffect(() => {\n    personService.getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  },[])\n\n\n  // console.log(promise.then(response => setPersons(response.data))\n  // console.log('persons', persons)\n\n\n  // ********************|\n  //*   Event Handlers  *|\n  //*********************|\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  const deletePerson = (id) => {\n    // console.log(\"delete person\" + id)\n    personService.deleteRecord(id)\n      .then(() => {\n        alert(\"Successfully deleted\")\n        setPersons(persons.filter(person => person.id !== id))\n      })\n  }\n\n  const add = (event) => {\n    event.preventDefault()\n    // console.log('addName triggered')\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n//\n    const personExists = (obj) => obj.name === newName //returns True if already exist\n    const numberSame = (obj) => obj.number === newNumber\n\n    if (persons.some(personExists)) {\n      if(window.confirm(`${newName} is already added to phonebook,\n        replace the old number with the new one?`))\n        {\n          //If click replace old number with new\n          const selectedID = persons.filter(person => person.name === newName)[0].id\n          personService.update(selectedID, newPerson)\n            .then(response => {\n              setPersons(persons.map(person => person.id === selectedID ? newPerson : person))\n\n            })\n        }\n\n    }\n    else {\n      personService.create(newPerson)\n        .then(response => {\n          setPersons(persons.concat(response))\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          setErrorMessage(error.response.data)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n\n        })\n\n    }\n  }\n  console.log(errorMessage)\n  // ********************|\n  //*   Filter          *|\n  //*********************|\n\n  const filteredPersons = search === ''\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(search))\n\n\n\n  // ********************|\n  //*         JSX       *|\n  //*********************|\n  return (\n    <div>\n      <Notification message={errorMessage}/>\n      <h2>Phonebook</h2>\n      <Search value={search} handle={handleSearchChange}/>\n\n      <Form submitHandler={add}\n            nameInput={newName}\n            nameHandle={handleNameChange}\n            numberInput={newNumber}\n            numberHandle={handleNumberChange}\n      />\n\n\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons}\n               deleteHandler={deletePerson}\n\n      />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport axios from 'axios'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}